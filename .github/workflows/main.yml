
name: CI

on:
  push:
    branches:
      - '*'

jobs:
  perOS:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:

    - name: Configure git
      run: "git config --global core.autocrlf false"
      shell: bash
    - uses: ilammy/msvc-dev-cmd@v1
    - name: Checkout
      uses: actions/checkout@v2
    - uses: olafurpg/setup-scala@v10
    - name: Test
      shell: bash
      run: sbt compile test nativeImage

  once:

    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}

    steps:

    - name: Checkout
      uses: actions/checkout@v2
    - uses: olafurpg/setup-scala@v10
    - name: Prepare snapshot documentation branch
      run: "git checkout -B snapshot-docs && git reset --hard main"
    - name: Generate docs
      run: sbt "r2GDocsDoGen"
    - name: Commit the new docs
      shell: bash
      run: |
        git config --local user.email "${{ github.event.pusher.email }}"
        git config --local user.name "${{ github.event.pusher.name }}"
        (git add . && git commit -m "Generate snapshot docs") || true
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: snapshot-docs
        force: true
    - name: Checkout
      uses: actions/checkout@v2
    - id: install-secret-key
      name: Install gpg secret key
      run: |
        cat <(echo -e "${{ secrets.MAVEN_CENTRAL_GPG_PRIVATE_KEY_B64 }}") | base64 --decode | gpg --batch --import
        gpg --list-keys
    - name: Sleep to wait for possible deployments to Maven Central from the release side of things
      if: ${{ startsWith(github.event.head_commit.message, 'Setting version to ') }}
      run: sleep 5m
    - name: Publish to maven central
      env:
        MAVEN_CENTRAL_GPG_PRIVATE_KEY_ID: ${{ secrets.MAVEN_CENTRAL_GPG_PRIVATE_KEY_ID }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        PGP_PASSPHRASE: ${{ secrets.MAVEN_CENTRAL_GPG_PASSWORD }}
      run: sbt r2SonatypeDoPublish
